import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"团队研发流程管理 - scrum","description":"","frontmatter":{"title":"团队研发流程管理 - scrum","date":"2025-07-07T00:00:00.000Z","author":"cimaStone","tags":["团队研发流程管理 - scrum"],"category":"项目管理"},"headers":[],"relativePath":"guide/scrum_running.md","filePath":"guide/scrum_running.md"}');
const _sfc_main = { name: "guide/scrum_running.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="团队研发流程管理-scrum" tabindex="-1">团队研发流程管理 - scrum <a class="header-anchor" href="#团队研发流程管理-scrum" aria-label="Permalink to &quot;团队研发流程管理 - scrum&quot;">​</a></h1><h2 id="🎯-背景" tabindex="-1">🎯 背景 <a class="header-anchor" href="#🎯-背景" aria-label="Permalink to &quot;🎯 背景&quot;">​</a></h2><p>自2021年接手金融资产研发团队，采取了scrum团队协作方式，截止目前已经实践了四年之久，对此进行梳理和总结</p><h2 id="🎯-团队的基本信息" tabindex="-1">🎯 团队的基本信息 <a class="header-anchor" href="#🎯-团队的基本信息" aria-label="Permalink to &quot;🎯 团队的基本信息&quot;">​</a></h2><blockquote><p>6名后端开发人员，以两个小组的形式存在；每个小组由三名开发、一名产品和一名测试组成；再有一位测试负责人，做协调和补位；每个scrum team有一名scrum master；</p></blockquote><p>scrum组织架构如图：</p><p><img src="https://github.com/user-attachments/assets/7483afb1-62c3-43c5-868a-113049e85684" alt="image"></p><p>这么安排的主要原因：</p><blockquote><ul><li>所负责的业务模块较多，还有历史包袱等因素，子系统二十几个，活跃的十个左右；按领域边界划分了两大类，交由两个小组负责</li><li>在一系列流程落地时，都会有很多变量导致差异性，两个组能做A/B测试，过程中相互借鉴，同时抽象出减少人为因素影响的团队协作流程</li></ul></blockquote><h2 id="研发流程" tabindex="-1">研发流程 <a class="header-anchor" href="#研发流程" aria-label="Permalink to &quot;研发流程&quot;">​</a></h2><p><img src="https://github.com/user-attachments/assets/e08838b6-a6f0-423a-a0a8-2996b2094771" alt="image"></p><p>冲刺流程活动如下：</p><ul><li>需求评审</li><li>用户故事点数规划会</li><li>迭代开始</li><li>技术评审/测试用例评审/提测</li><li>单元测试/集成测试/预发测试/发布/回归测试/验收测试</li><li>迭代结束</li><li>回顾会</li></ul><blockquote><p>接下来，我们将研发流程中核心的几个流程活动重点描述一下</p></blockquote><h3 id="需求评审" tabindex="-1">需求评审 <a class="header-anchor" href="#需求评审" aria-label="Permalink to &quot;需求评审&quot;">​</a></h3><p>需求内容选取逻辑：</p><ul><li>用户故事地图中优先级高的</li><li>列出明确的用户故事</li><li>生产环境中可能存在隐患的技术债</li><li>遵循最小价值交付</li><li>冲刺周期内（半个月左右）可完成的</li><li>需求预备事项：</li></ul><p>需求内容如果与之前设计有较大出入时，产品经理提前与scrum master对齐，防止需求评审时出现太大分歧，需求评审前1～2个工作日将需求规格说明书发出，scrum团队成员提前了解</p><h3 id="用户故事点数规划会" tabindex="-1">用户故事点数规划会 <a class="header-anchor" href="#用户故事点数规划会" aria-label="Permalink to &quot;用户故事点数规划会&quot;">​</a></h3><p>该活动时间可在需求评审当天，亦可跨天；结合冲刺内容&amp;团队成员对用户故事的熟悉度&amp;时间紧迫度等因素可动态调整 活动关键目标：</p><ol><li>scrum团队成员评估每个用户故事的点数 <ul><li>团队成员对用户故事基本了解：防止进入冲刺时仍然对冲刺内容不了解的情况</li><li>拉通各工种成员对用户故事的理解，拉齐相同工种成员对用户故事背后改动的偏差</li><li>用户故事偏向于其本身的难易度进行评估，尽量撇开个体差异性</li></ul></li><li>用户故事任务拆解，「任务-成员」映射 <ul><li>对用户故事以任务粒度进行拆解，细粒度拆解过程进一步评估用户故事的合理、遗漏等情况</li><li>scrum master任务分派或成员自行认领，「任务-成员」映射关系透明化，为后续的冲刺过程中的协同和职责划分更加清晰，根据团队个体差异性（技术强弱、用户故事熟悉度、系统熟悉度）进行调整</li></ul></li><li>冲刺基本信息确认 <ul><li>冲刺周期（开始时间 ～ 结束时间）</li><li>冲刺完成状态：发布 || 达到发布条件 || 大家认可的完成状态</li><li>冲刺内用户故事优先级及对应任务的优先级</li><li>冲刺内是否实施code Review &amp;&amp; code Review 模式 &amp;&amp; Review内容 &amp;&amp; Reviewer等相关信息</li><li>团队成员有着共同明确的目标，并为之而努力</li></ul></li><li>sprint相关信息落地 <ul><li>sprint模版 <img src="https://github.com/user-attachments/assets/0f28d579-3e3a-42fb-8d7b-fee562a315e3" alt="image"><img src="https://github.com/user-attachments/assets/d7c02881-d535-4b60-9b19-8fc94443ee24" alt="image"></li></ul></li></ol><h3 id="技术评审-测试用例评审" tabindex="-1">技术评审&amp;测试用例评审 <a class="header-anchor" href="#技术评审-测试用例评审" aria-label="Permalink to &quot;技术评审&amp;测试用例评审&quot;">​</a></h3><blockquote><p>在技术评审&amp;测试用例评审后，将相关的文档进行统一记录</p></blockquote><p><img src="https://github.com/user-attachments/assets/fe2b8e44-7dec-4797-9149-ce29f86929c3" alt="image"></p><ul><li>各文档命名用迭代名称作为前缀，例：sprint_cap_20230615_用户登陆；</li><li>以技术文档为例，如果该技术文档跨多个系统，则将其放在某个关联性最强的系统卡片中，其它相关联系统卡片用链接link该技术文档</li></ul><h3 id="站会" tabindex="-1">站会 <a class="header-anchor" href="#站会" aria-label="Permalink to &quot;站会&quot;">​</a></h3><blockquote><p>站会是只在冲刺周期内执行，我们一般在下班的时间点（六点）开展，哪怕需要加班，也在这个时间点进行</p></blockquote><p>关键作用：</p><ul><li>进度跟踪 <ul><li>今天做了什么，进度是否正常，符合预期</li><li>有无卡点，有无风险</li></ul></li><li>信息同步&amp;协同 <ul><li>什么时候技术评审、用例评审</li><li>分支什么时候拉取、合并</li><li>哪些用户故事在什么时候提测、上预发和发布，准备发布文档等</li><li>什么时候可以review，review的情况</li></ul></li></ul><h3 id="回顾会" tabindex="-1">回顾会 <a class="header-anchor" href="#回顾会" aria-label="Permalink to &quot;回顾会&quot;">​</a></h3><blockquote><p>回顾会，顾名思义，它的主要作用是当前冲刺的一个回顾，在当前冲刺完成后，scrum master收集相关信息后当天或跨天展开回顾会活动</p></blockquote><ul><li>中性的&amp;沟通平台 <ul><li>它是中性的且常态的，很多人常把回顾会与复盘会混为一谈；复盘会这个活动在预定好会议时间开始，这个活动就充满了对立感；回顾会可以包含复盘的内容，最大程度减少了参会人员的不适感</li><li>会议是轻松的，类似茶话会，团队成员都能够畅所欲言，聊之有物，因为每位都是当前sprint的深度参与者；在团队成员频繁沟通的过程中，增强团队成员彼此的熟悉度，提升团队凝聚力</li></ul></li><li>冲刺反馈信息收集 <ul><li>测试将当前冲刺中的bug量化信息貼入文档</li><li>在活动开始前，会收集scrum成员对当前迭代优点和改善点 <ul><li>优秀点：获得表扬，讨论如何更好的延续、复制和扩大</li><li>改善点：以马后炮视角回顾冲刺过程中哪些问题点是可以改善的、列出改善对应的action，供后续冲刺中执行</li></ul></li></ul></li><li>评审活动：本来该活动应该单独进行的，但基于团队的实际情况作为回顾会独立的一部分 <ul><li>产品描述当前迭代最小价值交付对业务的意义和影响</li><li>后续近2个月左右的冲刺方向，让开发/测试更了解业务发展和走向 <img src="https://github.com/user-attachments/assets/0072bc86-f889-41a5-96ed-1101c95491da" alt="image"></li></ul></li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>上述内容基本上把scrum主要流程及如何落地做了详细描述；我接手一个团队时，时刻在思考，我希望我的团队是一个怎样的存在；它是包容的、多样的、自动运行的、自治的、螺旋式上升的</p><h2 id="思考" tabindex="-1">思考 <a class="header-anchor" href="#思考" aria-label="Permalink to &quot;思考&quot;">​</a></h2><p>当然，熟悉敏捷和正在实践敏捷的同学看到这会有很多疑惑和问题，大家可以踊跃的提出您的疑问，我们共同交流，在此，我也提出一些问题进行探讨</p><ol><li>你们团队中的冲刺流程怎么把需求评审、回顾会都划出去了？与scrum定义的不一致</li><li>用户故事点数作用和意义一直让人很困惑，为什么要有这部分；它的价值在哪？</li><li>一个冲刺周期有太多的会议了吧，团队成员疲于应对各种会议，它真的是健康的且能正常推进的研发流程么？</li><li>冲刺周期可以调整么？冲刺周期中这些会议一定需要这些活动么？业务非常繁忙的时候都得开这些会议么，会不会流于形式？</li></ol></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("guide/scrum_running.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const scrum_running = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  scrum_running as default
};
